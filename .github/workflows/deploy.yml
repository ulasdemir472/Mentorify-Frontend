name: Build and Push Frontend Image

on:
  push:
    branches:
      - main
      - 'feature/**'
  pull_request:
    branches:
      - main
  workflow_dispatch:  # Manuel tetikleme desteÄŸi

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract Branch Name
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> $GITHUB_ENV

      - name: Get Last Git Tag (Auto Versioning)
        id: get_version
        run: |
          TAG=$(git describe --tags --abbrev=0 || echo "v1.0.0")
          echo "CURRENT_VERSION=$TAG" >> $GITHUB_ENV
          echo "Last version: $TAG"

      - name: Generate Next Version
        id: next_version
        run: |
          CURRENT_VERSION="${{ env.CURRENT_VERSION }}"
          MAJOR=$(echo $CURRENT_VERSION | cut -d. -f1 | sed 's/v//')
          MINOR=$(echo $CURRENT_VERSION | cut -d. -f2)
          PATCH=$(echo $CURRENT_VERSION | cut -d. -f3)
          NEW_VERSION="v$MAJOR.$MINOR.$(($PATCH + 1))"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
          echo "Next version: $NEW_VERSION"

      - name: Build and Tag Docker Image
        run: |
          docker build -t ulasdemir472/mentorify-frontend:${{ env.NEW_VERSION }} -t ulasdemir472/mentorify-frontend:latest .

      - name: Push Docker Image
        run: |
          docker push ulasdemir472/mentorify-frontend:${{ env.NEW_VERSION }}
          docker push ulasdemir472/mentorify-frontend:latest

      - name: Create New Git Tag
        run: |
          git tag ${{ env.NEW_VERSION }}
          git push origin ${{ env.NEW_VERSION }}
